package example.vorto.iotfever.generator.templates;

import com.google.common.base.Objects;
import org.eclipse.emf.common.util.EList;
import org.eclipse.vorto.codegen.api.tasks.IFileTemplate;
import org.eclipse.vorto.core.api.model.datatype.Type;
import org.eclipse.vorto.core.api.model.functionblock.Configuration;
import org.eclipse.vorto.core.api.model.functionblock.FunctionBlock;
import org.eclipse.vorto.core.api.model.functionblock.FunctionblockModel;
import org.eclipse.vorto.core.api.model.functionblock.Operation;
import org.eclipse.vorto.core.api.model.functionblock.ReturnObjectType;
import org.eclipse.vorto.core.api.model.functionblock.ReturnType;
import org.eclipse.vorto.core.api.model.informationmodel.FunctionblockProperty;
import org.eclipse.vorto.core.api.model.informationmodel.InformationModel;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class DeviceServiceTemplate implements IFileTemplate<InformationModel> {
  @Override
  public String getFileName(final InformationModel context) {
    String _name = context.getName();
    return (_name + "Device.swift");
  }
  
  @Override
  public String getPath(final InformationModel context) {
    return "src-gen/";
  }
  
  @Override
  public String getContent(final InformationModel context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//Generated by Vorto");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import Foundation");
    _builder.newLine();
    _builder.append("import CoreBluetooth");
    _builder.newLine();
    _builder.newLine();
    _builder.append("let deviceName = \"");
    String _displayname = context.getDisplayname();
    _builder.append(_displayname, "");
    _builder.append("\"");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("let ");
    String _name = context.getName();
    _builder.append(_name, "");
    _builder.append("InfoServiceUUID = CBUUID(string: \"add uuid here\") //TODO");
    _builder.newLineIfNotEmpty();
    {
      EList<FunctionblockProperty> _properties = context.getProperties();
      for(final FunctionblockProperty fbProperty : _properties) {
        _builder.append("let ");
        FunctionblockModel _type = fbProperty.getType();
        String _name_1 = _type.getName();
        _builder.append(_name_1, "");
        _builder.append("ServiceUUID = CBUUID(string: \"add uuid of ");
        String _name_2 = fbProperty.getName();
        _builder.append(_name_2, "");
        _builder.append(" here\") //TODO");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.newLine();
    _builder.append("// Characteristic UUIDs");
    _builder.newLine();
    _builder.append("let ");
    String _name_3 = context.getName();
    _builder.append(_name_3, "");
    _builder.append("InfoSystemIDUUID  = CBUUID(string: \"add uuid here\") //TODO");
    _builder.newLineIfNotEmpty();
    {
      EList<FunctionblockProperty> _properties_1 = context.getProperties();
      for(final FunctionblockProperty fbProperty_1 : _properties_1) {
        _builder.append("let ");
        FunctionblockModel _type_1 = fbProperty_1.getType();
        String _name_4 = _type_1.getName();
        _builder.append(_name_4, "");
        _builder.append("DataUUID = CBUUID(string: \"add uuid of ");
        String _name_5 = fbProperty_1.getName();
        _builder.append(_name_5, "");
        _builder.append(" for data here\")");
        _builder.newLineIfNotEmpty();
        {
          FunctionblockModel _type_2 = fbProperty_1.getType();
          FunctionBlock _functionblock = _type_2.getFunctionblock();
          Configuration _configuration = _functionblock.getConfiguration();
          boolean _notEquals = (!Objects.equal(_configuration, null));
          if (_notEquals) {
            _builder.append("let ");
            FunctionblockModel _type_3 = fbProperty_1.getType();
            String _name_6 = _type_3.getName();
            _builder.append(_name_6, "");
            _builder.append("ConfigUUID = CBUUID(string: \"add uuid of ");
            String _name_7 = fbProperty_1.getName();
            _builder.append(_name_7, "");
            _builder.append(" for configuration here\")");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.newLine();
    _builder.append("class ");
    String _name_8 = context.getName();
    _builder.append(_name_8, "");
    _builder.append("Device {");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Check name of device from advertisement data");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("class func found (advertisementData: [NSObject : AnyObject]!) -> Bool {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("let nameOfDeviceFound = (advertisementData as NSDictionary).objectForKey(CBAdvertisementDataLocalNameKey) as? NSString");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return (nameOfDeviceFound == deviceName)");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Check if the service has a valid UUID");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("class func validService (service : CBService) -> Bool {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if service.UUID == ");
    String _name_9 = context.getName();
    _builder.append(_name_9, "        ");
    _builder.append("InfoServiceUUID");
    _builder.newLineIfNotEmpty();
    {
      EList<FunctionblockProperty> _properties_2 = context.getProperties();
      for(final FunctionblockProperty fbProperty_2 : _properties_2) {
        _builder.append("        \t");
        _builder.append("|| service.UUID == ");
        FunctionblockModel _type_4 = fbProperty_2.getType();
        String _name_10 = _type_4.getName();
        _builder.append(_name_10, "        \t");
        _builder.append("ServiceUUID");
        _builder.newLineIfNotEmpty();
        _builder.append("        \t");
      }
    }
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("return true");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("else {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return false");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Check if the characteristic has a valid data UUID");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("class func validDataCharacteristic (characteristic : CBCharacteristic) -> Bool {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if service.UUID == ");
    String _name_11 = context.getName();
    _builder.append(_name_11, "        ");
    _builder.append("InfoServiceUUID");
    _builder.newLineIfNotEmpty();
    {
      EList<FunctionblockProperty> _properties_3 = context.getProperties();
      for(final FunctionblockProperty fbProperty_3 : _properties_3) {
        _builder.append("        \t");
        _builder.append("|| service.UUID == ");
        FunctionblockModel _type_5 = fbProperty_3.getType();
        String _name_12 = _type_5.getName();
        _builder.append(_name_12, "        \t");
        _builder.append("ServiceUUID");
        _builder.newLineIfNotEmpty();
        _builder.append("        \t");
      }
    }
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("return true");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("else {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return false");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    {
      EList<FunctionblockProperty> _properties_4 = context.getProperties();
      for(final FunctionblockProperty fbProperty_4 : _properties_4) {
        {
          FunctionblockModel _type_6 = fbProperty_4.getType();
          FunctionBlock _functionblock_1 = _type_6.getFunctionblock();
          EList<Operation> _operations = _functionblock_1.getOperations();
          for(final Operation operation : _operations) {
            {
              ReturnType _returnType = operation.getReturnType();
              boolean _notEquals_1 = (!Objects.equal(_returnType, null));
              if (_notEquals_1) {
                _builder.append("    ");
                _builder.append("class func ");
                String _name_13 = operation.getName();
                _builder.append(_name_13, "    ");
                _builder.append("(value : NSData) -> ");
                ReturnType _returnType_1 = operation.getReturnType();
                Type _returnType_2 = ((ReturnObjectType) _returnType_1).getReturnType();
                String _name_14 = _returnType_2.getName();
                _builder.append(_name_14, "    ");
                _builder.append(" {");
                _builder.newLineIfNotEmpty();
                _builder.append("    ");
                _builder.append("\t");
                _builder.append("var result = ");
                ReturnType _returnType_3 = operation.getReturnType();
                Type _returnType_4 = ((ReturnObjectType) _returnType_3).getReturnType();
                String _name_15 = _returnType_4.getName();
                _builder.append(_name_15, "    \t");
                _builder.append("()");
                _builder.newLineIfNotEmpty();
                _builder.append("    ");
                _builder.append("\t");
                _builder.append("//TODO convert and map value to response type");
                _builder.newLine();
                _builder.append("    ");
                _builder.append("\t");
                _builder.append("return result");
                _builder.newLine();
                _builder.append("    ");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
      }
    }
    _builder.append("    ");
    _builder.newLine();
    return _builder.toString();
  }
}

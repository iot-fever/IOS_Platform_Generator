package example.vorto.iotfever.generator.templates;

import com.google.common.base.Objects;
import org.eclipse.emf.common.util.EList;
import org.eclipse.vorto.codegen.api.tasks.IFileTemplate;
import org.eclipse.vorto.core.api.model.functionblock.FunctionBlock;
import org.eclipse.vorto.core.api.model.functionblock.FunctionblockModel;
import org.eclipse.vorto.core.api.model.functionblock.Operation;
import org.eclipse.vorto.core.api.model.functionblock.ReturnType;
import org.eclipse.vorto.core.api.model.informationmodel.FunctionblockProperty;
import org.eclipse.vorto.core.api.model.informationmodel.InformationModel;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class CoreBluetoothDetectionTemplate implements IFileTemplate<InformationModel> {
  @Override
  public String getFileName(final InformationModel context) {
    String _name = context.getName();
    return (_name + "Delegate.swift");
  }
  
  @Override
  public String getPath(final InformationModel context) {
    return "src-gen/";
  }
  
  @Override
  public String getContent(final InformationModel context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//Generated by Vorto");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import Foundation");
    _builder.newLine();
    _builder.append("import CoreBluetooth");
    _builder.newLine();
    _builder.newLine();
    _builder.append("let ");
    String _name = context.getName();
    _builder.append(_name, "");
    _builder.append("UUID = NSUserDefaults.standardUserDefaults().stringForKey(\"");
    String _name_1 = context.getName();
    _builder.append(_name_1, "");
    _builder.append("_uuid\")");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("class ");
    String _name_2 = context.getName();
    _builder.append(_name_2, "");
    _builder.append("Delegate: NSObject, CBPeripheralDelegate, CBCentralManagerDelegate {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("var ");
    String _name_3 = context.getName();
    _builder.append(_name_3, "\t");
    _builder.append("Peripheral : CBPeripheral!");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("var found = false");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("var detectionCompleted:(()->Void)?");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("override init() {}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("func found() -> Bool {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return self.found");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("func centralManagerDidUpdateState(central: CBCentralManager!) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if central.state == CBCentralManagerState.PoweredOn {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// Scan for peripherals if BLE is turned on");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("central.scanForPeripheralsWithServices(nil, options: nil)");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("println(\"Searching for ");
    String _displayname = context.getDisplayname();
    _builder.append(_displayname, "            ");
    _builder.append(" devices ...\")");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("else {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// Can have different conditions for all states if needed - show generic alert for now");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("println(\"Bluetooth switched off or not initialized\")");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("// Check out the discovered peripherals to find ");
    String _displayname_1 = context.getDisplayname();
    _builder.append(_displayname_1, "     ");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("func centralManager(central: CBCentralManager!, didDiscoverPeripheral peripheral: CBPeripheral!, advertisementData: [NSObject : AnyObject]!, RSSI: NSNumber!) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("var deviceUUID  = peripheral.identifier.UUIDString");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if ");
    String _name_4 = context.getName();
    _builder.append(_name_4, "        ");
    _builder.append("DeviceReader.found(advertisementData) == true {");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("println(\"Scanning...Detected \\(deviceUUID)\")");
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if  ");
    String _name_5 = context.getName();
    _builder.append(_name_5, "            ");
    _builder.append("UUID == deviceUUID {");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("self.");
    String _name_6 = context.getName();
    _builder.append(_name_6, "                ");
    _builder.append("Peripheral = peripheral");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("self.");
    String _name_7 = context.getName();
    _builder.append(_name_7, "                ");
    _builder.append("Peripheral.delegate = self");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("println(\"");
    String _displayname_2 = context.getDisplayname();
    _builder.append(_displayname_2, "                ");
    _builder.append(" found.\")");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("self.found = true");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("central.connectPeripheral(peripheral, options: nil)");
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if (self.found()) {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("self.detectionCompleted!()");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Discover services of the peripheral");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("func centralManager(central: CBCentralManager!, didConnectPeripheral peripheral: CBPeripheral!) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("println(\"Discovering peripheral services\")");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("peripheral.discoverServices(nil)");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// If disconnected, start searching again");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("func centralManager(central: CBCentralManager!, didDisconnectPeripheral peripheral: CBPeripheral!, error: NSError!) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("println(\"");
    String _displayname_3 = context.getDisplayname();
    _builder.append(_displayname_3, "        ");
    _builder.append(" disconnected\")");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("self.found = false");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("central.scanForPeripheralsWithServices(nil, options: nil)");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Check if the service discovered is valid i.e. one of the following:");
    _builder.newLine();
    {
      EList<FunctionblockProperty> _properties = context.getProperties();
      for(final FunctionblockProperty fbProperty : _properties) {
        _builder.append("    ");
        _builder.append("// ");
        FunctionblockModel _type = fbProperty.getType();
        String _displayname_4 = _type.getDisplayname();
        _builder.append(_displayname_4, "    ");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("    ");
    _builder.append("func peripheral(peripheral: CBPeripheral!, didDiscoverServices error: NSError!) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("for service in peripheral.services {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("let thisService = service as! CBService");
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if ");
    String _name_8 = context.getName();
    _builder.append(_name_8, "            ");
    _builder.append("Device.validService(thisService) {");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("// Discover characteristics of all valid services");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("peripheral.discoverCharacteristics(nil, forService: thisService)");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Get data values when they are updated");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("func peripheral(peripheral: CBPeripheral!, didUpdateValueForCharacteristic characteristic: CBCharacteristic!, error: NSError!) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    {
      EList<FunctionblockProperty> _properties_1 = context.getProperties();
      for(final FunctionblockProperty fbProperty_1 : _properties_1) {
        _builder.append("        ");
        _builder.append("if characteristics.UUID == ");
        FunctionblockModel _type_1 = fbProperty_1.getType();
        String _name_9 = _type_1.getName();
        _builder.append(_name_9, "        ");
        _builder.append("DataUUID {");
        _builder.newLineIfNotEmpty();
        {
          FunctionblockModel _type_2 = fbProperty_1.getType();
          FunctionBlock _functionblock = _type_2.getFunctionblock();
          EList<Operation> _operations = _functionblock.getOperations();
          for(final Operation operation : _operations) {
            {
              ReturnType _returnType = operation.getReturnType();
              boolean _notEquals = (!Objects.equal(_returnType, null));
              if (_notEquals) {
                _builder.append("        ");
                _builder.append("\t");
                _builder.append("let ");
                FunctionblockModel _type_3 = fbProperty_1.getType();
                String _name_10 = _type_3.getName();
                _builder.append(_name_10, "        \t");
                _builder.append("_value = ");
                String _name_11 = context.getName();
                _builder.append(_name_11, "        \t");
                _builder.append("Device.");
                String _name_12 = operation.getName();
                _builder.append(_name_12, "        \t");
                _builder.append("(characteristics.value)");
                _builder.newLineIfNotEmpty();
                _builder.append("        ");
                _builder.append("\t");
                _builder.append("// do something with the value");
                _builder.newLine();
              }
            }
          }
        }
        _builder.append("        ");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
}
